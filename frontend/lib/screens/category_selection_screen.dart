import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../models/order.dart';
import '../providers/order_provider.dart';

class CategorySelectionScreen extends ConsumerWidget {
  const CategorySelectionScreen({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'),
        leading: IconButton(
          icon: const Icon(Icons.arrow_back),
          onPressed: () => Navigator.pop(context),
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            _buildCategoryCard(
              context: context,
              icon: 'üì±',
              title: '–¢–µ—Ö–Ω–∏–∫–∞',
              subtitle: '–†–µ–º–æ–Ω—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
              serviceType: ServiceType.tech,
              subcategories: const ['–°–º–∞—Ä—Ç—Ñ–æ–Ω', '–ù–æ—É—Ç–±—É–∫', '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞'],
            ),
            const SizedBox(height: 16),
            _buildCategoryCard(
              context: context,
              icon: 'üëî',
              title: '–û–¥–µ–∂–¥–∞',
              subtitle: '–•–∏–º—á–∏—Å—Ç–∫–∞ –∏ —Ä–µ–º–æ–Ω—Ç',
              serviceType: ServiceType.clothing,
              subcategories: const ['–ü–∞–ª—å—Ç–æ', '–ö–æ—Å—Ç—é–º', '–ü–ª–∞—Ç—å–µ'],
            ),
            const SizedBox(height: 16),
            _buildCategoryCard(
              context: context,
              icon: 'üëü',
              title: '–û–±—É–≤—å',
              subtitle: '–ß–∏—Å—Ç–∫–∞ –∏ —Ä–µ–º–æ–Ω—Ç',
              serviceType: ServiceType.shoes,
              subcategories: const ['–ö—Ä–æ—Å—Å–æ–≤–∫–∏', '–¢—É—Ñ–ª–∏', '–°–∞–ø–æ–≥–∏'],
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildCategoryCard({
    required BuildContext context,
    required String icon,
    required String title,
    required String subtitle,
    required ServiceType serviceType,
    required List<String> subcategories,
  }) {
    return Card(
      elevation: 4,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      child: InkWell(
        borderRadius: BorderRadius.circular(16),
        onTap: () {
          _showSubcategoryDialog(
            context: context,
            ref: ProviderScope.containerOf(context),
            serviceType: serviceType,
            subcategories: subcategories,
          );
        },
        child: Padding(
          padding: const EdgeInsets.all(24.0),
          child: Row(
            children: [
              Text(
                icon,
                style: const TextStyle(fontSize: 40),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      title,
                      style: const TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    Text(
                      subtitle,
                      style: TextStyle(
                        fontSize: 14,
                        color: Colors.grey[600],
                      ),
                    ),
                  ],
                ),
              ),
              const Icon(Icons.arrow_forward_ios, color: Colors.grey),
            ],
          ),
        ),
      ),
    );
  }

  void _showSubcategoryDialog({
    required BuildContext context,
    required WidgetRef ref,
    required ServiceType serviceType,
    required List<String> subcategories,
  }) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: Text('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø ${_getCategoryName(serviceType)}'),
        content: SizedBox(
          width: double.maxFinite,
          child: ListView.builder(
            shrinkWrap: true,
            itemCount: subcategories.length,
            itemBuilder: (context, index) => ListTile(
              leading: Icon(_getSubcategoryIcon(serviceType, subcategories[index])),
              title: Text(subcategories[index]),
              onTap: () {
                Navigator.pop(context);
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –¥–∞–ª—å—à–µ
                ref.read(orderProvider.notifier).updateOrder(
                  serviceType: serviceType,
                  subcategory: subcategories[index],
                );
                Navigator.pushNamed(context, '/order-description');
              },
            ),
          ),
        ),
      ),
    );
  }

  String _getCategoryName(ServiceType type) {
    switch (type) {
      case ServiceType.tech:
        return '—Ç–µ—Ö–Ω–∏–∫–∏';
      case ServiceType.clothing:
        return '–æ–¥–µ–∂–¥—ã';
      case ServiceType.shoes:
        return '–æ–±—É–≤–∏';
    }
  }

  IconData _getSubcategoryIcon(ServiceType type, String subcategory) {
    // –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–∫–æ–Ω–æ–∫
    return Icons.category;
  }
}